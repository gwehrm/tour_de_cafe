width = 1.5)),
name = "")
data_linkedin_red <- data.frame(year = c(1989, 1990, 1991, 1992),
total = c(223, 170, 210, 2300))
data_linkedin_red <- data.frame(year = c(1989, 1990, 1991, 1992),
total = c(223, 190, 210, 2300))
data_linkedin_green <- data.frame(year = c(1993, 1994, 1995 ,1996),
total = c(109, 135, 75, 103))
plot_ly() %>%
add_trace(data = data_linkedin_red,
x = ~ year,
y = ~total,
type = "bar",
marker = list(color = "darkred",
line = list(color = 'rgb(8,48,107)',
width = 1.5)),
name = "") %>%
add_trace(data = data_linkedin_green,
x = ~year,
y = ~total,
type = "bar",
marker = list(color = "darkgreen",
line = list(color = 'rgb(8,48,107)',
width = 1.5)),
name = "")
data_linkedin_red <- data.frame(year = c(1989, 1990, 1991, 1992),
total = c(223, 190, 210, 230))
data_linkedin_green <- data.frame(year = c(1993, 1994, 1995 ,1996),
total = c(109, 135, 75, 103))
plot_ly() %>%
add_trace(data = data_linkedin_red,
x = ~ year,
y = ~total,
type = "bar",
marker = list(color = "darkred",
line = list(color = 'rgb(8,48,107)',
width = 1.5)),
name = "") %>%
add_trace(data = data_linkedin_green,
x = ~year,
y = ~total,
type = "bar",
marker = list(color = "darkgreen",
line = list(color = 'rgb(8,48,107)',
width = 1.5)),
name = "")
vline(2.5, "black"))
plot_ly() %>%
add_trace(data = data_linkedin_red,
x = ~ year,
y = ~total,
type = "bar",
marker = list(color = "darkred",
line = list(color = 'rgb(8,48,107)',
width = 1.5)),
name = "") %>%
add_trace(data = data_linkedin_green,
x = ~year,
y = ~total,
type = "bar",
marker = list(color = "darkgreen",
line = list(color = 'rgb(8,48,107)',
width = 1.5)),
name = "") %>%
layout( shapes = list(vline(2.5, "blue"),
vline(2.5, "black")))
plot_ly() %>%
add_trace(data = data_linkedin_red,
x = ~ year,
y = ~total,
type = "bar",
marker = list(color = "darkred",
line = list(color = 'rgb(8,48,107)',
width = 1.5)),
name = "") %>%
add_trace(data = data_linkedin_green,
x = ~year,
y = ~total,
type = "bar",
marker = list(color = "darkgreen",
line = list(color = 'rgb(8,48,107)',
width = 1.5)),
name = "") %>%
layout( shapes = list(vline(2.5, "blue"),
vline(2.5, "black")))
hline <- function(y = 0, color = "black") {
list(
type = "line",
x0 = 0,
x1 = 1,
xref = "paper",
y0 = y,
y1 = y,
line = list(color = color)
)
}
vline <- function(x = 0, color = "green") {
list(
type = "line",
y0 = 0,
y1 = 1,
yref = "paper",
x0 = x,
x1 = x,
line = list(color = color, dash="dot")
)
}
plot_ly() %>%
add_trace(data = data_linkedin_red,
x = ~ year,
y = ~total,
type = "bar",
marker = list(color = "darkred",
line = list(color = 'rgb(8,48,107)',
width = 1.5)),
name = "") %>%
add_trace(data = data_linkedin_green,
x = ~year,
y = ~total,
type = "bar",
marker = list(color = "darkgreen",
line = list(color = 'rgb(8,48,107)',
width = 1.5)),
name = "") %>%
layout( shapes = list(vline(2.5, "blue"),
vline(2.5, "black")))
plot_ly() %>%
add_trace(data = data_linkedin_red,
x = ~ year,
y = ~total,
type = "bar",
marker = list(color = "darkred",
line = list(color = 'rgb(8,48,107)',
width = 1.5)),
name = "") %>%
add_trace(data = data_linkedin_green,
x = ~year,
y = ~total,
type = "bar",
marker = list(color = "darkgreen",
line = list(color = 'rgb(8,48,107)',
width = 1.5)),
name = "") %>%
layout( shapes = list(hline(180, "blue"),
vline(1992.5, "black")))
plot_ly() %>%
add_trace(data = data_linkedin_red,
x = ~ year,
y = ~total,
type = "bar",
marker = list(color = "darkred",
line = list(color = 'rgb(8,48,107)',
width = 1.5)),
name = "") %>%
add_trace(data = data_linkedin_green,
x = ~year,
y = ~total,
type = "bar",
marker = list(color = "darkgreen",
line = list(color = 'rgb(8,48,107)',
width = 1.5)),
name = "") %>%
layout( shapes = list(hline(180, "blue"),
vline(1992.5, "black")),
title = "",
xaxis = list(title = ""),
yaxis = list(title = ""))
plot_ly() %>%
add_trace(data = data_linkedin_red,
x = ~ year,
y = ~total,
type = "bar",
marker = list(color = "darkred",
line = list(color = 'rgb(8,48,107)',
width = 1.5)),
name = "") %>%
add_trace(data = data_linkedin_green,
x = ~year,
y = ~total,
type = "bar",
marker = list(color = "darkgreen",
line = list(color = 'rgb(8,48,107)',
width = 1.5)),
name = "") %>%
layout( shapes = list(hline(180, "blue"),
vline(1992.5, "black")),
title = "",
xaxis = list(title = "",
showticklabels=FALSE),
yaxis = list(title = "",
showticklabels=FALSE))
plot_ly() %>%
add_trace(data = data_linkedin_red,
x = ~ year,
y = ~total,
type = "bar",
marker = list(color = "darkred",
line = list(color = 'rgb(8,48,107)',
width = 1.5)),
name = "") %>%
add_trace(data = data_linkedin_green,
x = ~year,
y = ~total,
type = "bar",
marker = list(color = "darkgreen",
line = list(color = 'rgb(8,48,107)',
width = 1.5)),
name = "") %>%
layout( shapes = list(vline(1992.5, "black")),
title = "",
xaxis = list(title = "",
showticklabels=FALSE),
yaxis = list(title = "",
showticklabels=FALSE))
plot_ly() %>%
add_trace(data = data_linkedin_red,
x = ~ year,
y = ~total,
type = "bar",
marker = list(color = "darkred",
line = list(color = 'rgb(8,48,107)',
width = 1.5)),
name = "") %>%
add_trace(data = data_linkedin_green,
x = ~year,
y = ~total,
type = "bar",
marker = list(color = "darkgreen",
line = list(color = 'rgb(8,48,107)',
width = 1.5)),
name = "") %>%
layout( shapes = list(vline(1992.5, "black")),
title = "",
xaxis = list(title = "",
showticklabels=FALSE),
yaxis = list(title = "",
showticklabels=FALSE),
showlegend = F)
options(repos = c(RSM = "https://radiant-rstats.github.io/minicran", CRAN = "https://cloud.r-project.org"))
install.packages("radiant")
radiant:::radiant()
require(igraph)
require(graph)
require(eulerian)
require(GA)
library(igraph)
library(graph)
install.packages("graph")
library(graph)
install.packages("BiocManager")
BiocManager::install("graph")
BiocManager::install("graph")
BiocManager::install("graph")
purr
BiocManager::install("graph")
library(plotly)
library(dplyr)
library(plotly)
df <- read.csv("Repos/SCM_530/wineTrain regression.csv")
df_test <- read.csv("../SCM_530/WineTest Regression.csv")
df <- df %>%
mutate(Price_log = log(Price))
df <- read.csv("Repos/SCM_530/wineTrain regression.csv")
df_test <- read.csv("../SCM_530/WineTest Regression.csv")
df_test <- read.csv("Repos//SCM_530/WineTest Regression.csv")
df <- df %>%
mutate(Price_log = log(Price))
fit_1 <- lm(Price_log ~ , data = df)
summary(fit_1)
names(df)
fit_1 <- lm(Price_log ~ WinterRain + AGST + HarvestRain + Age, data = df)
summary(fit_1)
df_test <- df_test %>%
mutate(Price_log = log(Price))
df_test$Price_Pred <- predict(fit_1, data = df_test)
<- predict(fit_1, data = df_test)
predict(fit_1, data = df_test)
df <- read.csv("Repos/SCM_530/wineTrain regression.csv")
df_test <- read.csv("Repos//SCM_530/WineTest Regression.csv")
df <- df %>%
mutate(Price_log = log(Price))
fit_1 <- lm(Price_log ~ WinterRain + AGST + HarvestRain + Age, data = df)
summary(fit_1)
plot(fit_1)
predict(fit_1, data = df_test)
df_test
df_test
predict(fit_1, data = df_test, type = "response")
predict(fit_1, df_test, type = "response")
df_test$Price_predict <- predict(fit_1, df_test, type = "response")
View(df_test)
# baseline model
mean(df$Price, na.rm = TRUE)
# baseline model
baseline_model <- mean(df$Price, na.rm = TRUE)
# baseline model
baseline_model <- mean(df$Price_log, na.rm = TRUE)
source("C:/Users/gabor/OneDrive/Dokumente/Repos/SCM_530/lin_reg.R", echo=TRUE)
View(df_test)
df_test <- df_test %>%
mutate(Price_log = log(Price))
View(df_test)
names(df_test)
df_test <- df_test %>%
mutate(epsilon_squared = (Price_predict - Price_log))
# baseline model
baseline_model <- log(mean(df$Price_log, na.rm = TRUE))
# baseline model
baseline_model <- mean(df$Price_log, na.rm = TRUE)
df_test <- df_test %>%
mutate(epsilon_squared = (Price_predict - Price_log)^2,
delta_squared = (Price_predict - baseline_model))
View(df_test)
df_test <- df_test %>%
mutate(epsilon_squared = (Price_predict - Price_log)^2,
delta_squared = (Price_predict - baseline_model)^2)
df_test <- df_test %>%
mutate(epsilon_squared = (Price_predict - Price_log)^2,
delta_squared = (Price_predict - baseline_model)^2,
sum_epsilon_squared = sum(epsilon_squared),
sum_delta_squared = sum(delta_squared))
View(df_test)
SSE <- df_test$sum_epsilon_squared
SSE <- df_test$sum_epsilon_squared[1]
SST <- df_test$sum_delta_squared[1]
library(plotly)
library(dplyr)
library(plotly)
df <- read.csv("Repos/SCM_530/wineTrain regression.csv")
df_test <- read.csv("Repos//SCM_530/WineTest Regression.csv")
df <- df %>%
mutate(Price_log = log(Price))
fit_1 <- lm(Price_log ~ WinterRain + AGST + HarvestRain + Age, data = df)
summary(fit_1)
plot(fit_1)
df_test <- df_test %>%
mutate(Price_log = log(Price))
df_test$Price_predict <- predict(fit_1, df_test, type = "response")
# baseline model
baseline_model <- mean(df$Price_log, na.rm = TRUE)
df_test <- df_test %>%
mutate(epsilon_squared = (Price_predict - Price_log)^2,
delta_squared = (Price_predict - baseline_model)^2,
sum_epsilon_squared = sum(epsilon_squared),
sum_delta_squared = sum(delta_squared))
SSE <- df_test$sum_epsilon_squared[1]
SST <- df_test$sum_delta_squared[1]
R2 <- 1 - SSE/SSF
R2
R2 <- 1 - SSE/SST
R2
fit_1 <- lm(Price_log ~ WinterRain + AGST + HarvestRain + Age, data = df)
summary(fit_1)
plot(fit_1)
corrplot::corrplot(df_cor, method = "number")
df_cor <- cor(df)
corrplot::corrplot(df_cor, method = "number")
df_test <- df_test %>%
mutate(Price_log = log(Price))
df_test$Price_predict <- predict(fit_1, df_test, type = "response")
# baseline model
baseline_model <- mean(df$Price_log, na.rm = TRUE)
df_test <- df_test %>%
mutate(epsilon_squared = (Price_predict - Price_log)^2,
delta_squared = (Price_log - baseline_model)^2,
sum_epsilon_squared = sum(epsilon_squared),
sum_delta_squared = sum(delta_squared))
SSE <- df_test$sum_epsilon_squared[1]
SST <- df_test$sum_delta_squared[1]
R2 <- 1 - SSE/SST
R2
df <- read.csv("Repos/SCM_530/climate_change-1.csv")
df_train <- df %>%
filter(Year <= 2006)
df_test <- df %>%
filter(Year > 2006)
View(df_test)
df_train <- df %>%
filter(Year <= 2006) %>%
dplyr::select(-Year, Month)
df_test <- df %>%
filter(Year > 2006) %>%
dplyr::select(-Year, -Month)
df_test <- df %>%
filter(Year > 2006) %>%
dplyr::select(-Year, -Month)
View(df_train)
df_train <- df %>%
filter(Year <= 2006) %>%
dplyr::select(-Year, -Month)
df_test <- df %>%
filter(Year > 2006) %>%
dplyr::select(-Year, -Month)
fit_1 <- lm(Temp ~ ., data = df_train)
summary(fit_1)
df_train_cor <- cor(df_train)
corrplot::corrplot(df_train_cor)
corrplot::corrplot(df_train_cor, method = "number")
fit_2 <- lm(Temp ~ MEI + TSI + Aerosols + N2O)
fit_2 <- lm(Temp ~ MEI + TSI + Aerosols + N2O, data = df_train)
summary(fit_2)
format(scientific = FALSE)
options(scipen = 999)
summary(fit_2)
fit_3 <- lm(Temp ~ ., data = df_train)
backward <- step(fit_3, direction='backward', scope=formula(all), trace=0)
fit_3 <- lm(Temp ~ ., data = df_train)
backward <- step(fit_3, direction='backward', scope=formula(all), trace=0)
backward <- step(fit_3, direction='backward', scope=formula(fit_3), trace=0)
backward
backward$coefficients
fit_4 <- lm(Temp ~ MEI + CO2 + N2O + CFC.11 + CFC.12 + Aerosols)
summary(fit_4)
fit_4 <- lm(Temp ~ MEI + CO2 + N2O + CFC.11 + CFC.12 + Aerosols, data = df_train)
summary(fit_4)
fit_4 <- lm(Temp ~ MEI + CO2 + N2O + CFC.11 + CFC.12 + Aerosols + TSI, data = df_train)
summary(fit_4)
names(df_train)
df_test$Prediction <- predict(fit_4, df_test, type = "response")
# baseline model
baseline_model <- mean(df_train$Temp, na.rm = TRUE)
df_test <- df_test %>%
mutate(epsilon_squared = (Predict - Temp)^2,
delta_squared = (Temp - baseline_model)^2,
sum_epsilon_squared = sum(epsilon_squared),
sum_delta_squared = sum(delta_squared))
df_test <- df_test %>%
mutate(epsilon_squared = (Prediction - Temp)^2,
delta_squared = (Temp - baseline_model)^2,
sum_epsilon_squared = sum(epsilon_squared),
sum_delta_squared = sum(delta_squared))
# baseline model
baseline_model <- mean(df_train$Temp, na.rm = TRUE)
df_test <- df_test %>%
mutate(epsilon_squared = (Prediction - Temp)^2,
delta_squared = (Temp - baseline_model)^2,
sum_epsilon_squared = sum(epsilon_squared),
sum_delta_squared = sum(delta_squared))
SSE <- df_test$sum_epsilon_squared[1]
SST <- df_test$sum_delta_squared[1]
R2 <- 1 - SSE/SST
R2
summary(fit_4)
setwd("~/Repos/TSP_bs4Dash")
install.packages("bs4Dash")
shiny::runApp()
runApp()
runApp()
runApp()
icon(name = "coffee")
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
source("modules/module_map.R")
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
locations <- rbind(c(-122.30509832425018, 47.65542988450092), # Hub
c(-122.30886785784372, 47.658680008298255), #Orins
c(-122.31138509668133, 47.6568385754671), #BG
c(-122.31047443011094, 47.657380583805704), # PG
c(-122.31580503427273, 47.66061103846286), # Tower
c(-122.31030121582047, 47.65047971081857), # Rotunda
c(-122.30974950271712, 47.65226358173898), #Evo
c(-122.30515784870903, 47.65305289588021), #MCSFT
c(-122.30252583500187, 47.65368750630508) # DB
)
rownames(locations) <- locations_text
locations <- locations[input$cafe_routes, ]
trips <- osrmTrip(loc = locations, osrm.profile = "car")
trips
runApp()
runApp()
runApp()
runApp()
runApp()
install.packages("bslib")
install.packages("bslib")
install.packages("bsicons")
runApp()
runApp()
runApp()
paste0("The trip takes ", values$trips[[1]]$summary$distance, " mins to complete without stopping time.")
runApp()
runApp()
runApp()
runApp()
runApp()
locations <- rbind(c(-122.30509832425018, 47.65542988450092), # Hub
c(-122.30886785784372, 47.658680008298255), #Orins
c(-122.31138509668133, 47.6568385754671), #BG
c(-122.31047443011094, 47.657380583805704), # PG
c(-122.31580503427273, 47.66061103846286), # Tower
c(-122.31030121582047, 47.65047971081857), # Rotunda
c(-122.30974950271712, 47.65226358173898), #Evo
c(-122.30515784870903, 47.65305289588021), #MCSFT
c(-122.30252583500187, 47.65368750630508) # DB
)
rownames(locations) <- locations_text
table <- osrmTable(locations)
View(table)
View(table$durations)
runApp()
runApp()
runApp()
